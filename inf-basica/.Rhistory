install.packages(ggplot2)
install.packages("ggpllot2")
install.packages("ggplot2")
install.packages("ggplot2")
data("Titanic")
force(Titanic)
data("iris")
force(iris)
str(iris)
summary(iris)
str(titanic)
str(Titanic)
grafico_barras = ggplot(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Comprimento da Sépala', y = 'Quantidade', color='Espécies', fill='Espécies')+
theme_minimal()
grafico_barras = ggplot2.ggplot(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Comprimento da Sépala', y = 'Quantidade', color='Espécies', fill='Espécies')+
theme_minimal()
grafico_barras = ggplot2(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Comprimento da Sépala', y = 'Quantidade', color='Espécies', fill='Espécies')+
theme_minimal()
ggplot(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Comprimento da Sépala', y = 'Quantidade', color='Espécies', fill='Espécies')+
theme_minimal()
ggplot(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Comprimento da Sépala', y = 'Quantidade', color='Espécies', fill='Espécies')+
theme_minimal()
library(ggplot2)
ggplot(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
ggplot(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
install.packaged(ggplot2)
install.package(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(ggplot)
library(ggplot2)
library(ggplot2)
ggplot(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
ggplot(data=Titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
Titanic = data("Titanic")
data("Titanic")
force(Titanic)
str(Titanic)
ggplot(data=titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
ggplot(data=Titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
ggplot(data=iris, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
ggplot(data=Titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
fortify(Titanic)
data("Titanic")
data("HairEyeColor")
str(HairEyeColor)
ggplot(data=HairEyeColor, aes(x=Eye, y=Hair))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
ggplot(data=Titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
ggplot(data=data("Titanic"), aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
ggplot(data=Titanic, aes(x=Class, y=Survived))+
geom_col()+
labs(x = 'Classe', y = 'Sobreviventes')+
theme_minimal()
str(Titanic)
# geom_bar is designed to make it easy to create bar charts that show
# counts (or sums of weights)
g <- ggplot(mpg, aes(class))
# Number of cars in each class:
g + geom_bar()
# Total engine displacement of each class
g + geom_bar(aes(weight = displ))
# Map class to y instead to flip the orientation
ggplot(mpg) + geom_bar(aes(y = class))
# Bar charts are automatically stacked when multiple bars are placed
# at the same location. The order of the fill is designed to match
# the legend
g + geom_bar(aes(fill = drv))
# If you need to flip the order (because you've flipped the orientation)
# call position_stack() explicitly:
ggplot(mpg, aes(y = class)) +
geom_bar(aes(fill = drv), position = position_stack(reverse = TRUE)) +
theme(legend.position = "top")
# To show (e.g.) means, you need geom_col()
df <- data.frame(trt = c("a", "b", "c"), outcome = c(2.3, 1.9, 3.2))
ggplot(df, aes(trt, outcome)) +
geom_col()
# But geom_point() displays exactly the same information and doesn't
# require the y-axis to touch zero.
ggplot(df, aes(trt, outcome)) +
geom_point()
# You can also use geom_bar() with continuous data, in which case
# it will show counts at unique locations
df <- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4)))
ggplot(df, aes(x)) + geom_bar()
# cf. a histogram of the same data
ggplot(df, aes(x)) + geom_histogram(binwidth = 0.5)
g <- ggplot(Titanic, aes(Class, Survived))
g <- ggplot(Titanic, aes(Class))
data("diamonds")
force(diamonds)
data("Titanic")
force(Titanic)
View(df)
str(Titanic)
Titanic.Class
Titanic.1st
gc()
data("Orange")
force(Orange)
str(Orange)
str(Orange)
ggplot(data=Orange, aes(x=age, y=circumference, color=Tree, shape=Tree))+
geom_point(size=3)+geom_smooth(se=FALSE)+
labs(x = 'Idade da Laranjeira', y = 'Circunferência da Laranjeira', color='Árvore', shape='Árvore')+
theme_minimal()
grafico_tendencia
setwd("~/www/faculdade/inf-basica")
